openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/LUISCUACUA/lab8/1.0.0
info:
  description: Esta es una api de sistema de comercio electr贸nico
  version: "1.0.0"
  title: sistema de comercio electr贸nico
  contact:
    email: luis.cuacua@digitalfemsa.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: usuarios
    description: Administracion de usuarios
  - name: pedidos
    description: Adminstracion de los pedidos creados por los usuarios
  - name: usuarios-pedidos
    description: Adminstracion de los pedidos creados por los usuarios
paths:
  /users:
    get:
      tags:
        - usuarios
      summary: Obtener lista de usuarios
      operationId: getUsers
      description: Obtiene una lista de todos los usuarios registrados
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
                        nombre:
                          type: string
                          example: "Luis Cuacua"
                        email:
                          type: string
                          example: "luis.cuacua@digitalfemsa.com"
    post:
      tags:
        - usuarios
      summary: Crear un nuevo usuario
      operationId: createUser
      description: Crea un nuevo usuario en el sistema
      parameters:
        - in: body
          name: body
          description: Datos del nuevo usuario
          required: true
          schema:
            type: object
            properties:
              nombre:
                type: string
                example: Luis Cuacua
              email:
                type: string
                example: luis.cuacua@digitalfemsa.com
      responses:
        201:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
                      nombre:
                        type: string
                        example: "Luis Cuacua"
                      email:
                        type: string
                        example: "luis.cuacua@digitalfemsa.com"
        400:
          description: Error en la solicitud
    put:
      tags:
        - usuarios
      summary: Actualizar un usuario existente
      operationId: updateUser
      description: Actualiza la informaci贸n de un usuario existente
      parameters:
        - in: path
          name: userId
          description: ID del usuario a actualizar
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Datos actualizados del usuario
          required: true
          schema:
            type: object
            properties:
              nombre:
                type: string
                example: Luis Cuacua
              email:
                type: string
                example: luis.cuacua@digitalfemsa.com
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
                      nombre:
                        type: string
                        example: "Luis Cuacua updated"
                      email:
                        type: string
                        example: "luis.cuacua-aupdated@digitalfemsa.com"
        '404':
          description: Usuario no encontrado
    delete:
      tags:
        - usuarios
      summary: Eliminar un usuario
      operationId: deleteUser
      description: Elimina un usuario del sistema
      parameters:
        - in: path
          name: userId
          description: ID del usuario a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Usuario eliminado exitosamente
        404:
          description: Usuario no encontrado
  /orders:
    get:
      tags:
        - pedidos
      summary: Obtener lista de pedidos
      operationId: getOrders
      description: Obtiene una lista de todos los pedidos realizados
      responses:
        200:
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: d290f1ee-6c54-4b01-90e6-d701748f0845
                        usuarioId:
                          type: integer
                          format: int64
                          example: d290f1ee-6c54-4b01-90e6-d701748f0851
                        total:
                          type: number
                          format: float
                          example: 500.00
                        fecha:
                          type: string
                          format: date-time
                          example: '2016-08-29T09:12:33.001Z'
          
    post:
      tags:
        - pedidos
      summary: Crear un nuevo pedido
      operationId: createOrder
      description: Crea un nuevo pedido en el sistema
      parameters:
        - in: body
          name: body
          description: Datos del nuevo pedido
          required: true
          schema:
            type: object
            properties:
              usuarioId:
                type: integer
                format: int64
                example: d290f1ee-6c54-4b01-90e6-d701748f0851
              total:
                type: number
                format: float
                example: 500.00
              fecha:
                type: string
                format: date-time
                example: '2016-08-29T09:12:33.001Z'
      responses:
        201:
          description: Pedido creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                        example: d290f1ee-6c54-4b01-90e6-d701748f0851
                      total:
                        type: number
                        format: float
                        example: 500.00
                      fecha:
                        type: string
                        format: date-time
                        example: '2016-08-29T09:12:33.001Z'
        400:
          description: Error en la solicitud
    put:
      tags:
        - pedidos
      summary: Actualizar un pedido existente
      operationId: updateOrder
      description: Actualiza la informaci贸n de un pedido existente
      parameters:
        - in: path
          name: orderId
          description: ID del pedido a actualizar
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Datos actualizados del pedido
          required: true
          schema:
            type: object
            properties:
              usuarioId:
                type: integer
                format: int64
                example: d290f1ee-6c54-4b01-90e6-d701748f0851
              total:
                type: number
                format: float
                example: 500.00
              fecha:
                type: string
                format: date-time
                example: '2016-08-29T09:12:33.001Z'
      responses:
        200:
          description: Pedido actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                        example: d290f1ee-6c54-4b01-90e6-d701748f0851
                      total:
                        type: number
                        format: float
                        example: 500.00
                      fecha:
                        type: string
                        format: date-time
                        example: '2016-08-29T09:12:33.001Z'
        404:
          description: Pedido no encontrado
    delete:
      tags:
        - pedidos
      summary: Eliminar un pedido
      operationId: deleteOrder
      description: Elimina un pedido del sistema
      parameters:
        - in: path
          name: orderId
          description: ID del pedido a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Pedido eliminado exitosamente
        404:
          description: Pedido no encontrado
  /users/{userId}/orders:
    get:
      tags:
        - usuarios-pedidos
      summary: Obtener pedidos de un usuario
      operationId: getUserOrders
      description: Obtiene una lista de todos los pedidos realizados por un usuario espec铆fico
      parameters:
        - in: path
          name: userId
          description: ID del usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Lista de pedidos del usuario
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                usuarioId:
                  type: integer
                  format: int64
                total:
                  type: number
                  format: float
                fecha:
                  type: string
                  format: date-time
        404:
          description: Usuario no encontrado
  /users/{userId}/orders/{orderId}:
    get:
      tags:
        - usuarios-pedidos
      summary: Obtener un pedido espec铆fico de un usuario
      operationId: getUserOrder
      description: Obtiene un pedido espec铆fico realizado por un usuario
      parameters:
        - in: path
          name: userId
          description: ID del usuario
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: orderId
          description: ID del pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Detalles del pedido del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  usuarioId:
                    type: integer
                    format: int64
                  total:
                    type: number
                    format: float
                  fecha:
                    type: string
                    format: date-time
        404:
          description: Pedido o usuario no encontrado
    delete:
      tags:
        - usuarios-pedidos
      summary: Eliminar un pedido de un usuario
      operationId: deleteUserOrder
      description: Elimina un pedido espec铆fico realizado por un usuario
      parameters:
        - in: path
          name: userId
          description: ID del usuario
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: orderId
          description: ID del pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Pedido eliminado exitosamente
        404:
          description: Pedido o usuario no encontrado
components:
  schemas:
    InventoryItem:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object